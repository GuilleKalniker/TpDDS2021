@startuml
object RepositorioCaracteristicas {
caracteristicasVigentes: Set<Caracteristica>

agregarCaracteristica(caracteristica)
sacarCaracteristica(caracteristica)
}


object RepositorioCentroDeRescate {
centrosDeRescateRegistradors: List<CentroDeRescate>

registrarCentroDeRescate(centroDeRescate)
getCentroDeRescateMasCercanoA(ubicacion)
}


object RepositorioDuenios {
dueniosRegistrados: List<Duenio>

registrarDuenio(duenio)
}


object RepositorioMascotas {
mascotasRegistradas: List<MascotaRegistrada>
datosMascotasPerdidas: List<FormularioMascotaPerdida>
}


object RepositorioUsuarios {
usuariosRegistrados: Map<Usuario>
dueniosRegistrados: Map<Duenio>
administradoresRegistrados: Map<Administrador>
}


class Foto {
URL: String
}


class Ubicacion {
latitud: Double
longitud: Double

calcularDistanciaA(ubicacion)
}


class FormularioMascotaPerdida {
datosRescatista: DatosPersonales
descripcionEstado: String
fotosEncuentro: List<Foto>
lugarEncuentro: Ubicacion
fechaEncuentro: LocalDate
ID: String
}


class MascotaRegistrada {
tipo: TipoMascota
nombre: String
apodo: String
edad: Integer
sexo: Sexo
descripcionFisica: String
fotos: List<Foto>
ID: String
caracteristicas: List<Caracteristica>

coincideID(ID)
generarQR()
leerQR()
esMiQR()
}


class Contacto {
nombre: String
apellido: String
telefono: Integer
email: String
}


class DatosPersonales {
nombre: String
apellido: String
fechaDeNacimiento: LocalDate
tipoDocumento: TipoDocumento
nroDocumento: Integer
contactos: List<Contacto>
direccion: String
}


class Administrador {
agregarCaracteristica(caracteristica)
sacarCaracteristica(caracteristica)
}


class Duenio {
datosPersonales: DatosPersonales
mascotasID: List<String>

registrarMascota(mascota, centroDeRescate)
tieneA(IDMascota)
}


class Rescatista {
notificarMascotaEncontradaConID(formularioMascotaPerdida)
generarSolicitudPublicacion(formulario)
}


class Usuario {
nombreDeUsuario: String
contrasenia: String

registrarse()
}


class Voluntario {
centroDeRescate: CentroDeRescate

aprobarSolicitud(solicitudPublicacion)
rechazarSolicitud(solicitudPublicacion)
}


class PublicacionMascotaPerdida {
formularioMascotaPerdida: FormularioMascotaPerdida

filtrarInformacionSensible()
validarQueNoTieneID()
}


class SolicitudPublicacion {
publicacion: PublicacionMascotaPerdida

aceptarEn(centroDeRescate)
rechazarEn(centroDeRescate)
}


class JavaMailApi {
correo_envio: String
contrasenia: String
props: Properties
session: Session

agregarDestinatarioAlMensaje(mensaje, correo)
armarMensaje(duenio, formularioMascotaPerdid)
}


interface Notificador {
notificar(duenio, formularioMascotaPerdida)
}


interface HogaresTransitoService {
postUsuarios(parameters)
getHogares(token, offset)
getToken(request)
}


class ServicioHogaresTransito {
maximaCantidadRegistrosDefault: Integer
urlApi: String
retrofit: Retrofit
token: String

solicitarTodosLosHogares()
listaHogaresTransito(numeroDePagina)
cantidadHogaresTotales()
}


class CentroDeRescate {
correoDelCentro: String
contraseniaCorreo: String
ubicacion: Ubicacion
solicitudesPublicacion: List<SolicitudPublicacion>
publicacionesMascotasPerdidasSinID: List<PublicacionMascotaPerdida>

registrarMascota(mascota)
buscarMascota(ID)
existeMascota(ID)
cargarMascotaPerdida(formularioMascotaPerdida)
notificar(duenio)
buscarDuenioAPartirIDMascota(ID)
aceptarSolicitud(solicitudPublicacion)
eliminarSolicitud(solicitudPublicacion)
generarSolicitud(solicitudPublicacion)
}


enum TipoDocumento {
DNI,
LC,
LE,
CI
}


enum TipoMascota {
PERRO,
GATO
}


enum Caracteristica {
CASTRADA,
MARRON,
NEGRO,
BLANCO,
MANSO,
ARISCO,
ALTO,
BAJO,
PESADO,
JUGUETON,
RABIOSO,
IMPULSIVO,
HIPERACTIVO,
AMIGABLE,
DEPENDIENTE,
ROMPECOSAS,
TRANQUILO
}


enum Sexo {
MASCULINO,
FEMENINO
}



CentroDeRescate --> Ubicacion
CentroDeRescate -->"*" SolicitudPublicacion
CentroDeRescate -right->"*" PublicacionMascotaPerdida
CentroDeRescate ..> Notificador

Usuario <|-- Administrador
Usuario <|-- Duenio
Usuario <|-- Voluntario

Duenio --> DatosPersonales
Duenio -->"*" MascotaRegistrada

DatosPersonales -->"*" Contacto
DatosPersonales --> TipoDocumento

Voluntario --> CentroDeRescate

Administrador ..> RepositorioCaracteristicas

Rescatista ..> FormularioMascotaPerdida
RepositorioCentroDeRescate <.. Rescatista

MascotaRegistrada --> TipoMascota
MascotaRegistrada --> Sexo
MascotaRegistrada -->"*" Foto
MascotaRegistrada -->"*" Caracteristica

FormularioMascotaPerdida --> DatosPersonales
FormularioMascotaPerdida -->"*" Foto
FormularioMascotaPerdida --> Ubicacion

RepositorioCaracteristicas -->"*" Caracteristica

RepositorioCentroDeRescate -->"*" CentroDeRescate

RepositorioDuenios -->"*" Duenio

RepositorioUsuarios -->"*" Usuario
RepositorioUsuarios -->"*" Duenio
RepositorioUsuarios -->"*" Administrador

RepositorioMascotas -->"*" MascotaRegistrada
RepositorioMascotas -->"*" FormularioMascotaPerdida

Notificador <|.. JavaMailApi

HogaresTransitoService <|.. ServicioHogaresTransito
@enduml
